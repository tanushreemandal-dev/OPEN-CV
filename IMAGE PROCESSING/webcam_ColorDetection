import cv2
import numpy as np

cap = cv2.VideoCapture(0)
cap.set(3, 640)
cap.set(4, 480)

def nothing(x):
    pass

# RED TRACKBARS
cv2.namedWindow("Red Trackbars")
cv2.resizeWindow("Red Trackbars", 640, 240)
cv2.createTrackbar("Hue Min", "Red Trackbars", 0, 179, nothing)
cv2.createTrackbar("Hue Max", "Red Trackbars", 13, 179, nothing)
cv2.createTrackbar("Sat Min", "Red Trackbars", 182, 255, nothing)
cv2.createTrackbar("Sat Max", "Red Trackbars", 255, 255, nothing)
cv2.createTrackbar("Val Min", "Red Trackbars", 87, 255, nothing)
cv2.createTrackbar("Val Max", "Red Trackbars", 255, 255, nothing)

# GREEN TRACKBARS
cv2.namedWindow("Green Trackbars")
cv2.resizeWindow("Green Trackbars", 640, 240)
cv2.createTrackbar("Hue Min", "Green Trackbars", 30, 179, nothing)
cv2.createTrackbar("Hue Max", "Green Trackbars", 60, 179, nothing)
cv2.createTrackbar("Sat Min", "Green Trackbars", 75, 255, nothing)
cv2.createTrackbar("Sat Max", "Green Trackbars", 178, 255, nothing)
cv2.createTrackbar("Val Min", "Green Trackbars", 0, 255, nothing)
cv2.createTrackbar("Val Max", "Green Trackbars", 255, 255, nothing)

while True:
    success, img = cap.read()
    if not success:
        break

    imgHSV = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)

    # RED VALUES
    r_hue_min = cv2.getTrackbarPos("Hue Min", "Red Trackbars")
    r_hue_max = cv2.getTrackbarPos("Hue Max", "Red Trackbars")
    r_sat_min = cv2.getTrackbarPos("Sat Min", "Red Trackbars")
    r_sat_max = cv2.getTrackbarPos("Sat Max", "Red Trackbars")
    r_val_min = cv2.getTrackbarPos("Val Min", "Red Trackbars")
    r_val_max = cv2.getTrackbarPos("Val Max", "Red Trackbars")

    # GREEN VALUES
    g_hue_min = cv2.getTrackbarPos("Hue Min", "Green Trackbars")
    g_hue_max = cv2.getTrackbarPos("Hue Max", "Green Trackbars")
    g_sat_min = cv2.getTrackbarPos("Sat Min", "Green Trackbars")
    g_sat_max = cv2.getTrackbarPos("Sat Max", "Green Trackbars")
    g_val_min = cv2.getTrackbarPos("Val Min", "Green Trackbars")
    g_val_max = cv2.getTrackbarPos("Val Max", "Green Trackbars")

    # Create masks
    lower_r = np.array([r_hue_min, r_sat_min, r_val_min])
    upper_r = np.array([r_hue_max, r_sat_max, r_val_max])
    mask_r = cv2.inRange(imgHSV, lower_r, upper_r)
    imgRes_r = cv2.bitwise_and(img, img, mask=mask_r)

    lower_g = np.array([g_hue_min, g_sat_min, g_val_min])
    upper_g = np.array([g_hue_max, g_sat_max, g_val_max])
    mask_g = cv2.inRange(imgHSV, lower_g, upper_g)
    imgRes_g = cv2.bitwise_and(img, img, mask=mask_g)

    # Show results
    cv2.imshow("Original", img)
    cv2.imshow("Result_red", imgRes_r)
    cv2.imshow("Result_green", imgRes_g)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
